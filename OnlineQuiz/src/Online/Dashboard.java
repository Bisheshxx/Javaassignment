/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Online;

import java.sql.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author Rohis
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    
    public Dashboard(String subject,String name) {
        initComponents();
        
        lblSubject.setText(subject);
        lblName.setText(name);
        btnResult.setEnabled(false);
        radio();
        retrieve();
        questionfilter();
        showQuestion(i);
        
        
    }

    Connection con=Jdbc.getCon();
    PreparedStatement st=null;
    ResultSet rs=null;
    LinkedList<String> question=new LinkedList();
    LinkedList<String> randomquestions=new LinkedList();
    LinkedList<String> answer=new LinkedList();
    LinkedList<String> userAnswer=new LinkedList();
     ButtonGroup bg=new ButtonGroup();
    int i=0;
    private Dashboard() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblQuestion = new javax.swing.JLabel();
        lblSubject = new javax.swing.JLabel();
        Option1 = new javax.swing.JRadioButton();
        Option2 = new javax.swing.JRadioButton();
        Option3 = new javax.swing.JRadioButton();
        Option4 = new javax.swing.JRadioButton();
        btnResult = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QuestionSet");
        setBackground(new java.awt.Color(102, 153, 0));

        lblQuestion.setText("jLabel1");

        lblSubject.setText("jLabel1");

        Option1.setText("jRadioButton1");

        Option2.setText("jRadioButton2");

        Option3.setText("jRadioButton3");

        Option4.setText("jRadioButton4");

        btnResult.setText("Result");
        btnResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        lblName.setText("jLabel1");

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Option4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Option3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Option2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Option1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblQuestion))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnResult, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(18, 18, 18))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblName)
                    .addComponent(lblSubject))
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblSubject)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lblQuestion)
                        .addGap(26, 26, 26)
                        .addComponent(Option1)
                        .addGap(18, 18, 18)
                        .addComponent(Option2)
                        .addGap(18, 18, 18)
                        .addComponent(Option3)
                        .addGap(18, 18, 18)
                        .addComponent(Option4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                        .addComponent(btnLogout)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnResult, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultActionPerformed
      result();
    }//GEN-LAST:event_btnResultActionPerformed
    
   
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
      
         if(i<randomquestions.size()-1)
          {
                if(Option1.isSelected())
        {
            userAnswer.add(i,Option1.getText());
             i++;
             bg.clearSelection();
            showQuestion(i);
           
        }
        else if(Option2.isSelected())
        {
            userAnswer.add(i,Option2.getText());
              i++;
              bg.clearSelection();
            showQuestion(i);
            
        }
        
         else if(Option3.isSelected())
        {
            userAnswer.add(i,Option3.getText());
              i++;
              bg.clearSelection();
            showQuestion(i);
            
        }
        
         else if(Option4.isSelected())
        {
            userAnswer.add(i,Option4.getText());
            i++;
            bg.clearSelection();
            showQuestion(i);
            
        }
         else
         {
             JOptionPane.showMessageDialog(this, "Please answer the question");
             
         }
            }
         else if(i==randomquestions.size()-1)
         {
                           if(Option1.isSelected())
        {
            userAnswer.add(Option1.getText());
             i++;
            
        }
        else if(Option2.isSelected())
        {
            userAnswer.add(Option2.getText());
              i++;
           
        }
        
         else if(Option3.isSelected())
        {
            userAnswer.add(Option3.getText());
              i++;
          
        }
        
         else if(Option4.isSelected())
        {
            userAnswer.add(Option4.getText());
            i++;
           
        }
         else
         {
             JOptionPane.showMessageDialog(this, "Answer all the question!!");
             
         }
                JOptionPane.showMessageDialog(this, "Thank you for attempting every questions!!! Check your result:)");
               btnResult.setEnabled(true);
               btnNext.setEnabled(false);
               
         }
               
                   
            
        
      
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        Choice log=new Choice();
        log.show();
        this.hide();
    }//GEN-LAST:event_btnLogoutActionPerformed
 
   
    public void result()
    {
        System.out.print(answer.size());
        int points=0;
        for(int i=0; i<userAnswer.size(); i++)
        {
            if(userAnswer.get(i).equals(answer.get(i)))
            {
                
                points+=10;
            }
        }
         ResultViewer res=new ResultViewer(points);
            res.show();
            this.hide();
    }
    
   
    
    public void radio()
    {
       
        bg.add(Option1);
        bg.add(Option2);
        bg.add(Option3);
        bg.add(Option4);
    }
    
  
    public void retrieve()
    {
        String query="Select id from Questionbank where Subject=?";
        try {
            st=con.prepareStatement(query);
            st.setString(1, lblSubject.getText());
            rs=st.executeQuery();
            while(rs.next())
            {
                question.add(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
       
    public void questionfilter()
    {
      
        while(randomquestions.size()!=10)
        {
            int index=(int)(Math.random()*question.size());
            if(!randomquestions.contains(question.get(index)))
            {
                randomquestions.add(question.get(index));
            }
            
        }
        
    }
    
    public ResultSet getValue(int no)
    {
        String query="Select Question,Option1,Option2,Option3,Option4,Answer from Questionbank where id=?";
        try {
            st=con.prepareStatement(query);
            st.setString(1, randomquestions.get(no));
            rs=st.executeQuery();
            
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        return rs;
    }
  
    
    public void showQuestion(int indexNo)
    {
        ResultSet rs=getValue(indexNo);
        try {
            if(rs.next())
            {
                lblQuestion.setText("Qno."+(i+1)+": "+rs.getString(1));
                Option1.setText(rs.getString(2));
                Option2.setText(rs.getString(3));
                Option3.setText(rs.getString(4));
                Option4.setText(rs.getString(5));
                              
                answer.add(rs.getString(6));
            }
           
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
  
    
  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
            
        });
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Option1;
    private javax.swing.JRadioButton Option2;
    private javax.swing.JRadioButton Option3;
    private javax.swing.JRadioButton Option4;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnResult;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblQuestion;
    private javax.swing.JLabel lblSubject;
    // End of variables declaration//GEN-END:variables
}
